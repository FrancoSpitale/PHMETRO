#include <16f873.h>
#DEVICE ADC=10 //ADC usa 10 bit
#FUSES NOWDT, HS, NOPROTECT,NOLVP,NODEBUG, BROWNOUT,NOCPD, NOWRT,NOPUT
#USE DELAY(clock=20000000)
#include <lcd.c>
#define mem PIN_C3 //pulsador para grabar en eeprom
#define read PIN_C4 //pulsador para leer memoria eeprom
#define mas PIN_C5 //pulsador para subir posiciones en la lectura de memoria

int memoria=0;
int lectura=0;
float i;
float j;
int m1=0;
int m2=0;
int r1=0;
int r2=0;
int numero=0;
int cm=0;
int cr=0;
int contador=0;
int hola=0;
int a=0;

# INT_AD //interrupción del ADC, se activa cuando esta lista la conversión.

AD_isr()

{
Set_ADC_Channel(0); //especifico el canal para la conversión.
delay_us(1);
i=Read_ADC(ADC_READ_ONLY); //lee el ultimo resultado.
i=10.23*i/1023;
delay_ms(1);
Read_ADC(ADC_START_ONLY); //inicia nueva conversion.
Set_ADC_Channel(1);
delay_us(1);
j=Read_ADC(ADC_READ_ONLY);
j=100*j/1023;

 
if(i>7)
{
i=(i+0.021*j-0.525)/(1+0.003*j-0.075);
}
if(i<7)
{
i=(i-0.021*(50-j)+0.525)/(1-0.003*(50-j)+0.075);
}

Read_ADC(ADC_START_ONLY); //inicia nueva conversion.
}


void main()

{
lcd_init();
Setup_ADC_Ports(RA0_RA1_ANALOG_RA3_REF); //configuro como analogica la ra0, la ra1 y la ra3 como referencia
Setup_ADC(ADC_CLOCK_DIV_32);
enable_interrupts(INT_AD);
enable_interrupts(GLOBAL);
delay_us(1);
Read_ADC(ADC_START_ONLY);

while(1)
{
   if(input(mem))
   {
   delay_ms(20);
      if(input(mem))
      {
m1=i; //casteo la parte entera de la medición de ph para guardarlo en     memoria ya que la eeprom es de 8 bit
m2=(i - m1)*100; //tomo la parte decimal de la medición de ph y lo grabo en la siguiente posición de memoria
      m2=m2+1;
      write_eeprom(cm,m1); //grabo parte entera
      memoria++;
      cm++;
      write_eeprom(cm,m2); //grabo parte decimal
      cm++; //contador para grabar datos en la eeprom
      memoria++; //contador para mostrar el numero de la medición en pantalla
      
lcd_enviar(LCD_COMANDO, LCD_CLEAR); //limpio pantalla

      r1=read_eeprom(lectura); //leo en eeprom parte entera de la medición
      delay_ms(1);
      lectura++;
      r2=read_eeprom(lectura); //leo en eeprom parte decimal de la medición
      delay_ms(1);
      lectura++;
      printf(lcd_putc,"memoria %i %i.%i",numero,r1,r2); //muestro en LCD reconstruyendo la medición
      numero++;
   
         while(input(mem)) //while que me permite mantener fija la medición a grabar en eeprom
         {
         delay_ms(1);
         }
         
         lcd_enviar(LCD_COMANDO, LCD_CLEAR);
   
            if(numero==5) //cuando se completa la memoria vuelve a cero la cuenta y se graba en la primer posición
            {
            cm=0;
            numero=0;
            lectura=0;
            }
      }
   }


      while(input(read))
      {
         
           if(input(mas))
               {   
                  delay_ms(20);
                     
                     lcd_enviar(LCD_COMANDO, LCD_CLEAR);
                     
                     while(input(mas)) //while infinito para que el usuario suelte el pulsador
                     {
                     delay_ms(1);
                     }
                              
                  contador+=2;
                  cr++; //contador de lectura de memoria
                                   
                      
               }      
                       
 
 if(contador==0)
                        {
                           if(a==0) //para que se borre la pantalla solo una ves en el comienzo del modo lectura de eeprom
                           {
                           lcd_enviar(LCD_COMANDO, LCD_CLEAR);
                           a=1;
                           }
                        }
                        hola=contador;
                        hola++;
                        r1 = read_eeprom(contador);
                        r2 = read_eeprom(hola);
                        
                        if (cr==5)
                        {
                        contador=0;
                        cr=0;
                        }
                        lcd_enviar(LCD_COMANDO, LCD_HOME);
                        printf(lcd_putc,"memoria %i %i.%i",cr,r1,r2);
                 
         }
      
cr=0;

if(a==1) //para que borre solo una ves la pantalla al salir del modo lectura o escritura
{
lcd_enviar(LCD_COMANDO, LCD_CLEAR);
}
a=0;
contador=0;

lcd_enviar(LCD_COMANDO, LCD_HOME);

printf(lcd_putc,"PH:%.2f ",i);
lcd_gotoxy(9,1);
printf(lcd_putc,"T:%.1f",j);
}
}
 
